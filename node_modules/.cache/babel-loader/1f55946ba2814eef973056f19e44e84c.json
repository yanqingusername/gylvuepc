{"remainingRequest":"/Users/user/coyote/vue2-dynamic-routing/node_modules/babel-loader/lib/index.js!/Users/user/coyote/vue2-dynamic-routing/src/request/http.js","dependencies":[{"path":"/Users/user/coyote/vue2-dynamic-routing/src/request/http.js","mtime":1681182916781},{"path":"/Users/user/coyote/vue2-dynamic-routing/node_modules/cache-loader/dist/cjs.js","mtime":1681181551618},{"path":"/Users/user/coyote/vue2-dynamic-routing/node_modules/babel-loader/lib/index.js","mtime":1681181551535}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwoKLyoqYXhpb3PlsIHoo4UKICog6K+35rGC5oum5oiq44CB55u45bqU5oum5oiq44CB6ZSZ6K+v57uf5LiA5aSE55CGCiAqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAiZWxlbWVudC11aSI7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyL2luZGV4JzsgLy8g546v5aKD55qE5YiH5o2iCi8vIGF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJOwovLyBheGlvcy5kZWZhdWx0cy5iYXNlVVJMID0gJ2h0dHA6Ly94bXIuY295b3RlYmlvLWxhYi5jb20vc3RvcmVtYW5hZ2UnOwoKYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCA9ICcvJzsgLy8g6K+35rGC6LaF5pe25pe26Ze0CgpheGlvcy5kZWZhdWx0cy50aW1lb3V0ID0gNjAwMDA7CmF4aW9zLmRlZmF1bHRzLmNyZXdpdGhkZW50aWFscyA9IHRydWU7IC8vIHBvc3Tor7fmsYLlpLQKLy8gYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJzsKLy8g6K+35rGC5oum5oiq5ZmoCgpheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLmVycm9yKGVycm9yKTsKfSk7IC8vIOWTjeW6lOaLpuaIquWZqAoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAvLyBjb25zb2xlLmxvZygicmVzcG9uc2UiLHJlc3BvbnNlKQogIHZhciBzdGF0dXMgPSByZXNwb25zZS5zdGF0dXM7CgogIGlmIChzdGF0dXMgPT09IDIwMCkgewogICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7CiAgfSBlbHNlIGlmIChzdGF0dXMgPT09IDQwMSB8fCBzdGF0dXMgPT09IDQwMykgewogICAgTm90aWZ5KHsKICAgICAgdHlwZTogJ3ByaW1hcnknLAogICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLm1zZwogICAgfSk7IC8vIOi3s+i9rOeZu+W9lemhtemdou+8jOW5tuWwhuimgea1j+iniOeahOmhtemdomZ1bGxQYXRo5Lyg6L+H5Y6777yM55m75b2V5oiQ5Yqf5ZCO6Lez6L2s6ZyA6KaB6K6/6Zeu55qE6aG16Z2iCgogICAgcm91dGVyLnJlcGxhY2UoewogICAgICBwYXRoOiAnL2xvZ2luJwogICAgfSk7CiAgfSBlbHNlIHsKICAgIE5vdGlmeSh7CiAgICAgIHR5cGU6ICdwcmltYXJ5JywKICAgICAgbWVzc2FnZTogcmVzcG9uc2UuZGF0YS5tc2cKICAgIH0pOwogIH0KfSwgLy8g5pyN5Yqh5Zmo54q25oCB56CB5LiN5pivMjAw55qE5oOF5Ya1ICAgIApmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygiZXJyb3IiLCBlcnJvcik7Cn0pOwovKiogCiAqIGdldOaWueazle+8jOWvueW6lGdldOivt+axgiAKICogQHBhcmFtIHtTdHJpbmd9IHVybCBb6K+35rGC55qEdXJs5Zyw5Z2AXSAKICogQHBhcmFtIHtPYmplY3R9IHBhcmFtcyBb6K+35rGC5pe25pC65bim55qE5Y+C5pWwXSAKICovCgpleHBvcnQgZnVuY3Rpb24gZ2V0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zLmdldCh1cmwsIHsKICAgICAgcGFyYW1zOiBwYXJhbXMKICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmVqZWN0KGVyci5kYXRhKTsKICAgIH0pOwogIH0pOwp9Ci8qKiAKICogcG9zdOaWueazle+8jOWvueW6lHBvc3Tor7fmsYIgCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgW+ivt+axgueahHVybOWcsOWdgF0gCiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHBvc3QodXJsLCBwYXJhbXMpIHsKICAvLyBjb25zb2xlLmxvZyhwYXJhbXMpCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zLnBvc3QodXJsLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmVqZWN0KGVyci5kYXRhKTsKICAgIH0pOwogIH0pOwp9Ci8qKiAKICogcHV05pa55rOV77yM5a+55bqUcHV06K+35rGCIAogKiBAcGFyYW0ge1N0cmluZ30gdXJsIFvor7fmsYLnmoR1cmzlnLDlnYBdIAogKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zIFvor7fmsYLml7bmkLrluKbnmoTlj4LmlbBdIAogKi8KCmV4cG9ydCBmdW5jdGlvbiBwdXQodXJsLCBwYXJhbXMpIHsKICAvLyBjb25zb2xlLmxvZyhwYXJhbXMpCiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zLnB1dCh1cmwsIHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIHJlc29sdmUocmVzLmRhdGEpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICByZWplY3QoZXJyLmRhdGEpOwogICAgfSk7CiAgfSk7Cn0KLyoqIAogKiBkZWxldGXmlrnms5XvvIzlr7nlupRkZWxldGXor7fmsYIgCiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgW+ivt+axgueahHVybOWcsOWdgF0gCiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgW+ivt+axguaXtuaQuuW4pueahOWPguaVsF0gCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGRlbGV0KHVybCwgcGFyYW1zKSB7CiAgLy8gY29uc29sZS5sb2cocGFyYW1zKQogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBheGlvcy5kZWxldGUodXJsLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgcmVqZWN0KGVyci5kYXRhKTsKICAgIH0pOwogIH0pOwp9"},{"version":3,"sources":["/Users/user/coyote/vue2-dynamic-routing/src/request/http.js"],"names":["axios","Message","router","defaults","baseURL","timeout","crewithdentials","interceptors","request","use","config","error","Promise","response","status","resolve","Notify","type","message","data","msg","replace","path","console","log","get","url","params","reject","then","res","catch","err","post","put","delet","delete"],"mappings":"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","sourcesContent":["/**axios封装\n * 请求拦截、相应拦截、错误统一处理\n */\nimport axios from 'axios';\nimport { Message } from \"element-ui\"\nimport router from '../router/index'\n// 环境的切换\n// axios.defaults.baseURL = process.env.VUE_APP_BASE_API;\n// axios.defaults.baseURL = 'http://xmr.coyotebio-lab.com/storemanage';\n\naxios.defaults.baseURL = '/';\n\n// 请求超时时间\naxios.defaults.timeout = 60000;\n\n\naxios.defaults.crewithdentials = true;\n\n// post请求头\n// axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n// 请求拦截器\naxios.interceptors.request.use(\n    config => {\n        return config;\n    },\n    error => {\n        return Promise.error(error);\n    })\n// 响应拦截器\naxios.interceptors.response.use(\n    response => {\n        // console.log(\"response\",response)\n        const status = response.status\n        if(status === 200){\n            return Promise.resolve(response);\n        }else if(status === 401||status === 403){\n            Notify({ type: 'primary', message:  response.data.msg});\n            // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面\n            router.replace({\n                path: '/login'\n            });\n        }else{\n            Notify({ type: 'primary', message:  response.data.msg});\n        }\n    },\n    // 服务器状态码不是200的情况    \n    error => {\n        console.log(\"error\",error)\n    }\n);\n/** \n * get方法，对应get请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function get(url, params) {\n    return new Promise((resolve, reject) => {\n        axios.get(url, {\n                params\n            })\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n/** \n * post方法，对应post请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function post(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.post(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n\n/** \n * put方法，对应put请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function put(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.put(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}\n\n/** \n * delete方法，对应delete请求 \n * @param {String} url [请求的url地址] \n * @param {Object} params [请求时携带的参数] \n */\nexport function delet(url, params) {\n    // console.log(params)\n    return new Promise((resolve, reject) => {\n        axios.delete(url, params)\n            .then(res => {\n                resolve(res.data);\n            })\n            .catch(err => {\n                reject(err.data)\n            })\n    });\n}"]}]}